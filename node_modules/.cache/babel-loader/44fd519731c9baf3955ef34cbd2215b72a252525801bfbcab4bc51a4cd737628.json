{"ast":null,"code":"var _jsxFileName = \"/Users/Pallavi/metaphor/news-summarizer/src/components/Search.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './search.styles.css';\nimport Metaphor from \"../metaphor/metaphor-api\";\nimport SearchResult from \"./SearchResults\";\nimport { SearchComponent } from \"./SearchComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResponse, setSearchResponse] = useState({\n    autopromptString: \"\",\n    results: []\n  });\n  let metaphor = new Metaphor(\"5b12e8f1-9669-4cb1-9904-b9fda5a57a64\");\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleSearchClick = async () => {\n    console.log('News summarizer for:', searchTerm);\n    const response = await metaphor.search(searchTerm, {});\n    setSearchResponse(response);\n  };\n  function clearResults() {\n    setSearchResponse({\n      autopromptString: \"\",\n      results: []\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [searchResponse.results.length !== 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"search-button\",\n      onClick: () => clearResults(),\n      children: \"Clear Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 52\n    }, this) : null, searchResponse.results.length === 0 ? /*#__PURE__*/_jsxDEV(SearchComponent, {\n      value: searchTerm,\n      onChange: handleSearchChange,\n      onClick: handleSearchClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 52\n    }, this) : /*#__PURE__*/_jsxDEV(SearchResult, {\n      apiClient: metaphor,\n      searchResponse: searchResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 150\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"Oxw2lqZXdJ6W2HPMDygFcOxtl94=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Metaphor","SearchResult","SearchComponent","jsxDEV","_jsxDEV","Search","_s","searchTerm","setSearchTerm","searchResponse","setSearchResponse","autopromptString","results","metaphor","handleSearchChange","e","target","value","handleSearchClick","console","log","response","search","clearResults","children","length","type","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","apiClient","_c","$RefreshReg$"],"sources":["/Users/Pallavi/metaphor/news-summarizer/src/components/Search.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './search.styles.css';\r\nimport Metaphor, {SearchResponse} from \"../metaphor/metaphor-api\";\r\nimport SearchResult from \"./SearchResults\";\r\nimport {SearchComponent} from \"./SearchComponent\";\r\n\r\nfunction Search() {\r\n    const [searchTerm, setSearchTerm] = useState<string>('');\r\n    const [searchResponse, setSearchResponse] = useState<SearchResponse>({autopromptString: \"\", results: []});\r\n    let metaphor = new Metaphor(\"5b12e8f1-9669-4cb1-9904-b9fda5a57a64\");\r\n\r\n    const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    const handleSearchClick = async () => {\r\n        console.log('News summarizer for:', searchTerm);\r\n        const response = await metaphor.search(searchTerm, {});\r\n\r\n        setSearchResponse(response);\r\n    };\r\n\r\n    function clearResults() {\r\n        setSearchResponse({autopromptString: \"\", results: []});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {searchResponse.results.length !== 0 ? <button type=\"button\" className={\"search-button\"} onClick={() => clearResults()}>Clear Results</button> : null}\r\n            {searchResponse.results.length === 0 ? <SearchComponent value={searchTerm} onChange={handleSearchChange} onClick={handleSearchClick}/> : <SearchResult apiClient={metaphor} searchResponse={searchResponse}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAcC,QAAQ,QAAO,OAAO;AAChD,OAAO,qBAAqB;AAC5B,OAAOC,QAAQ,MAAwB,0BAA0B;AACjE,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,SAAQC,eAAe,QAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAiB;IAACY,gBAAgB,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC;EACzG,IAAIC,QAAQ,GAAG,IAAIb,QAAQ,CAAC,sCAAsC,CAAC;EAEnE,MAAMc,kBAAkB,GAAIC,CAAsC,IAAK;IACnEP,aAAa,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEb,UAAU,CAAC;IAC/C,MAAMc,QAAQ,GAAG,MAAMR,QAAQ,CAACS,MAAM,CAACf,UAAU,EAAE,CAAC,CAAC,CAAC;IAEtDG,iBAAiB,CAACW,QAAQ,CAAC;EAC/B,CAAC;EAED,SAASE,YAAYA,CAAA,EAAG;IACpBb,iBAAiB,CAAC;MAACC,gBAAgB,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;EAC1D;EAEA,oBACIR,OAAA;IAAAoB,QAAA,GACKf,cAAc,CAACG,OAAO,CAACa,MAAM,KAAK,CAAC,gBAAGrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAE,eAAgB;MAACC,OAAO,EAAEA,CAAA,KAAML,YAAY,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,GAAG,IAAI,EACpJvB,cAAc,CAACG,OAAO,CAACa,MAAM,KAAK,CAAC,gBAAGrB,OAAA,CAACF,eAAe;MAACe,KAAK,EAAEV,UAAW;MAAC0B,QAAQ,EAAEnB,kBAAmB;MAACc,OAAO,EAAEV;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAAG5B,OAAA,CAACH,YAAY;MAACiC,SAAS,EAAErB,QAAS;MAACJ,cAAc,EAAEA;IAAe;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5M,CAAC;AAEd;AAAC1B,EAAA,CA1BQD,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AA6Bf,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}