{"ast":null,"code":"import _classCallCheck from \"/Users/Pallavi/metaphor/news-summarizer/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Pallavi/metaphor/news-summarizer/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _toConsumableArray from \"/Users/Pallavi/metaphor/news-summarizer/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nvar IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nvar IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([].concat(_toConsumableArray(IMPLICIT_END_TAG_REQUIRED), [$.CAPTION, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]));\nvar SCOPING_ELEMENT_NS = new Map([[$.APPLET, NS.HTML], [$.CAPTION, NS.HTML], [$.HTML, NS.HTML], [$.MARQUEE, NS.HTML], [$.OBJECT, NS.HTML], [$.TABLE, NS.HTML], [$.TD, NS.HTML], [$.TEMPLATE, NS.HTML], [$.TH, NS.HTML], [$.ANNOTATION_XML, NS.MATHML], [$.MI, NS.MATHML], [$.MN, NS.MATHML], [$.MO, NS.MATHML], [$.MS, NS.MATHML], [$.MTEXT, NS.MATHML], [$.DESC, NS.SVG], [$.FOREIGN_OBJECT, NS.SVG], [$.TITLE, NS.SVG]]);\nvar NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nvar TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nvar TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nvar TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nvar TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport var OpenElementStack = /*#__PURE__*/function () {\n  function OpenElementStack(document, treeAdapter, handler) {\n    _classCallCheck(this, OpenElementStack);\n    this.treeAdapter = treeAdapter;\n    this.handler = handler;\n    this.items = [];\n    this.tagIDs = [];\n    this.stackTop = -1;\n    this.tmplCount = 0;\n    this.currentTagId = $.UNKNOWN;\n    this.current = document;\n  }\n  //Index of element\n  _createClass(OpenElementStack, [{\n    key: \"currentTmplContentOrNode\",\n    get: function get() {\n      return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n  }, {\n    key: \"_indexOf\",\n    value: function _indexOf(element) {\n      return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n  }, {\n    key: \"_isInTemplate\",\n    value: function _isInTemplate() {\n      return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n  }, {\n    key: \"_updateCurrentElement\",\n    value: function _updateCurrentElement() {\n      this.current = this.items[this.stackTop];\n      this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n  }, {\n    key: \"push\",\n    value: function push(element, tagID) {\n      this.stackTop++;\n      this.items[this.stackTop] = element;\n      this.current = element;\n      this.tagIDs[this.stackTop] = tagID;\n      this.currentTagId = tagID;\n      if (this._isInTemplate()) {\n        this.tmplCount++;\n      }\n      this.handler.onItemPush(element, tagID, true);\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      var popped = this.current;\n      if (this.tmplCount > 0 && this._isInTemplate()) {\n        this.tmplCount--;\n      }\n      this.stackTop--;\n      this._updateCurrentElement();\n      this.handler.onItemPop(popped, true);\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(oldElement, newElement) {\n      var idx = this._indexOf(oldElement);\n      this.items[idx] = newElement;\n      if (idx === this.stackTop) {\n        this.current = newElement;\n      }\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(referenceElement, newElement, newElementID) {\n      var insertionIdx = this._indexOf(referenceElement) + 1;\n      this.items.splice(insertionIdx, 0, newElement);\n      this.tagIDs.splice(insertionIdx, 0, newElementID);\n      this.stackTop++;\n      if (insertionIdx === this.stackTop) {\n        this._updateCurrentElement();\n      }\n      this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n  }, {\n    key: \"popUntilTagNamePopped\",\n    value: function popUntilTagNamePopped(tagName) {\n      var targetIdx = this.stackTop + 1;\n      do {\n        targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n      } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n      this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n  }, {\n    key: \"shortenToLength\",\n    value: function shortenToLength(idx) {\n      while (this.stackTop >= idx) {\n        var popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n          this.tmplCount -= 1;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, this.stackTop < idx);\n      }\n    }\n  }, {\n    key: \"popUntilElementPopped\",\n    value: function popUntilElementPopped(element) {\n      var idx = this._indexOf(element);\n      this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n  }, {\n    key: \"popUntilPopped\",\n    value: function popUntilPopped(tagNames, targetNS) {\n      var idx = this._indexOfTagNames(tagNames, targetNS);\n      this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n  }, {\n    key: \"popUntilNumberedHeaderPopped\",\n    value: function popUntilNumberedHeaderPopped() {\n      this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n  }, {\n    key: \"popUntilTableCellPopped\",\n    value: function popUntilTableCellPopped() {\n      this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n  }, {\n    key: \"popAllUpToHtmlElement\",\n    value: function popAllUpToHtmlElement() {\n      //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n      //we perform this fast stack clean up.\n      this.tmplCount = 0;\n      this.shortenToLength(1);\n    }\n  }, {\n    key: \"_indexOfTagNames\",\n    value: function _indexOfTagNames(tagNames, namespace) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }, {\n    key: \"clearBackTo\",\n    value: function clearBackTo(tagNames, targetNS) {\n      var idx = this._indexOfTagNames(tagNames, targetNS);\n      this.shortenToLength(idx + 1);\n    }\n  }, {\n    key: \"clearBackToTableContext\",\n    value: function clearBackToTableContext() {\n      this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n  }, {\n    key: \"clearBackToTableBodyContext\",\n    value: function clearBackToTableBodyContext() {\n      this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n  }, {\n    key: \"clearBackToTableRowContext\",\n    value: function clearBackToTableRowContext() {\n      this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(element) {\n      var idx = this._indexOf(element);\n      if (idx >= 0) {\n        if (idx === this.stackTop) {\n          this.pop();\n        } else {\n          this.items.splice(idx, 1);\n          this.tagIDs.splice(idx, 1);\n          this.stackTop--;\n          this._updateCurrentElement();\n          this.handler.onItemPop(element, false);\n        }\n      }\n    }\n    //Search\n  }, {\n    key: \"tryPeekProperlyNestedBodyElement\",\n    value: function tryPeekProperlyNestedBodyElement() {\n      //Properly nested <body> element (should be second element in stack).\n      return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(element) {\n      return this._indexOf(element) > -1;\n    }\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(element) {\n      var elementIdx = this._indexOf(element) - 1;\n      return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n  }, {\n    key: \"isRootHtmlElementCurrent\",\n    value: function isRootHtmlElementCurrent() {\n      return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n  }, {\n    key: \"hasInScope\",\n    value: function hasInScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.tagIDs[i];\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (tn === tagName && ns === NS.HTML) {\n          return true;\n        }\n        if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasNumberedHeaderInScope\",\n    value: function hasNumberedHeaderInScope() {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.tagIDs[i];\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (isNumberedHeader(tn) && ns === NS.HTML) {\n          return true;\n        }\n        if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasInListItemScope\",\n    value: function hasInListItemScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.tagIDs[i];\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (tn === tagName && ns === NS.HTML) {\n          return true;\n        }\n        if ((tn === $.UL || tn === $.OL) && ns === NS.HTML || SCOPING_ELEMENT_NS.get(tn) === ns) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasInButtonScope\",\n    value: function hasInButtonScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.tagIDs[i];\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (tn === tagName && ns === NS.HTML) {\n          return true;\n        }\n        if (tn === $.BUTTON && ns === NS.HTML || SCOPING_ELEMENT_NS.get(tn) === ns) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasInTableScope\",\n    value: function hasInTableScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.tagIDs[i];\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (ns !== NS.HTML) {\n          continue;\n        }\n        if (tn === tagName) {\n          return true;\n        }\n        if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasTableBodyContextInTableScope\",\n    value: function hasTableBodyContextInTableScope() {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.tagIDs[i];\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (ns !== NS.HTML) {\n          continue;\n        }\n        if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n          return true;\n        }\n        if (tn === $.TABLE || tn === $.HTML) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasInSelectScope\",\n    value: function hasInSelectScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.tagIDs[i];\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (ns !== NS.HTML) {\n          continue;\n        }\n        if (tn === tagName) {\n          return true;\n        }\n        if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n          return false;\n        }\n      }\n      return true;\n    }\n    //Implied end tags\n  }, {\n    key: \"generateImpliedEndTags\",\n    value: function generateImpliedEndTags() {\n      while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"generateImpliedEndTagsThoroughly\",\n    value: function generateImpliedEndTagsThoroughly() {\n      while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"generateImpliedEndTagsWithExclusion\",\n    value: function generateImpliedEndTagsWithExclusion(exclusionId) {\n      while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n        this.pop();\n      }\n    }\n  }]);\n  return OpenElementStack;\n}();","map":{"version":3,"names":["TAG_ID","$","NS","isNumberedHeader","IMPLICIT_END_TAG_REQUIRED","Set","DD","DT","LI","OPTGROUP","OPTION","P","RB","RP","RT","RTC","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","concat","_toConsumableArray","CAPTION","COLGROUP","TBODY","TD","TFOOT","TH","THEAD","TR","SCOPING_ELEMENT_NS","Map","APPLET","HTML","MARQUEE","OBJECT","TABLE","TEMPLATE","ANNOTATION_XML","MATHML","MI","MN","MO","MS","MTEXT","DESC","SVG","FOREIGN_OBJECT","TITLE","NAMED_HEADERS","H1","H2","H3","H4","H5","H6","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","document","treeAdapter","handler","_classCallCheck","items","tagIDs","stackTop","tmplCount","currentTagId","UNKNOWN","current","_createClass","key","get","_isInTemplate","getTemplateContent","value","_indexOf","element","lastIndexOf","getNamespaceURI","_updateCurrentElement","push","tagID","onItemPush","pop","popped","onItemPop","replace","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","tagName","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","namespace","i","includes","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","BODY","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","tn","ns","hasNumberedHeaderInScope","hasInListItemScope","UL","OL","hasInButtonScope","BUTTON","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","has","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId"],"sources":["/Users/Pallavi/metaphor/news-summarizer/node_modules/parse5-htmlparser2-tree-adapter/node_modules/parse5/dist/parser/open-element-stack.js"],"sourcesContent":["import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}