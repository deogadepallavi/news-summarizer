{"ast":null,"code":"import { isTag } from '../utils.js';\n/*\n * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n */\nvar submittableSelector = 'input,select,textarea,keygen';\nvar r20 = /%20/g;\nvar rCRLF = /\\r?\\n/g;\n/**\n * Encode a set of form elements as a string for submission.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serialize();\n * //=> 'foo=bar'\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serialize/}\n */\nexport function serialize() {\n  // Convert form elements into name/value objects\n  var arr = this.serializeArray();\n  // Serialize each element into a key/value string\n  var retArr = arr.map(function (data) {\n    return \"\".concat(encodeURIComponent(data.name), \"=\").concat(encodeURIComponent(data.value));\n  });\n  // Return the resulting serialization\n  return retArr.join('&').replace(r20, '+');\n}\n/**\n * Encode a set of form elements as an array of names and values.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray();\n * //=> [ { name: 'foo', value: 'bar' } ]\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serializeArray/}\n */\nexport function serializeArray() {\n  var _this = this;\n  // Resolve all form elements from either forms or collections of form elements\n  return this.map(function (_, elem) {\n    var $elem = _this._make(elem);\n    if (isTag(elem) && elem.name === 'form') {\n      return $elem.find(submittableSelector).toArray();\n    }\n    return $elem.filter(submittableSelector).toArray();\n  }).filter(\n  // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n  '[name!=\"\"]:enabled' +\n  // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n  ':not(:submit, :button, :image, :reset, :file)' +\n  // And are either checked/don't have a checkable state\n  ':matches([checked], :not(:checkbox, :radio))'\n  // Convert each of the elements to its value(s)\n  ).map(function (_, elem) {\n    var _a;\n    var $elem = _this._make(elem);\n    var name = $elem.attr('name'); // We have filtered for elements with a name before.\n    // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n    var value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : '';\n    // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n    if (Array.isArray(value)) {\n      return value.map(function (val) {\n        return (\n          /*\n           * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n           * These can occur inside of `<textarea>'s`\n           */\n          {\n            name: name,\n            value: val.replace(rCRLF, '\\r\\n')\n          }\n        );\n      });\n    }\n    // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n    return {\n      name: name,\n      value: value.replace(rCRLF, '\\r\\n')\n    };\n  }).toArray();\n}","map":{"version":3,"names":["isTag","submittableSelector","r20","rCRLF","serialize","arr","serializeArray","retArr","map","data","concat","encodeURIComponent","name","value","join","replace","_this","_","elem","$elem","_make","find","toArray","filter","attr","_a","val","Array","isArray"],"sources":["https://raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/api/forms.ts"],"sourcesContent":[null],"mappings":"AAEA,SAASA,KAAK,QAAQ,aAAa;AAEnC;;;;AAIA,IAAMC,mBAAmB,GAAG,8BAA8B;AAC1D,IAAMC,GAAG,GAAG,MAAM;AAClB,IAAMC,KAAK,GAAG,QAAQ;AAEtB;;;;;;;;;;;;;;AAcA,OAAM,SAAUC,SAASA,CAAA;EACvB;EACA,IAAMC,GAAG,GAAG,IAAI,CAACC,cAAc,EAAE;EAEjC;EACA,IAAMC,MAAM,GAAGF,GAAG,CAACG,GAAG,CACpB,UAACC,IAAI;IAAA,UAAAC,MAAA,CACAC,kBAAkB,CAACF,IAAI,CAACG,IAAI,CAAC,OAAAF,MAAA,CAAIC,kBAAkB,CAACF,IAAI,CAACI,KAAK,CAAC;EAAA,CAAE,CACvE;EAED;EACA,OAAON,MAAM,CAACO,IAAI,CAAC,GAAG,CAAC,CAACC,OAAO,CAACb,GAAG,EAAE,GAAG,CAAC;AAC3C;AAOA;;;;;;;;;;;;;;AAcA,OAAM,SAAUI,cAAcA,CAAA;EAAA,IAAAU,KAAA;EAG5B;EACA,OAAO,IAAI,CAACR,GAAG,CAAC,UAACS,CAAC,EAAEC,IAAI,EAAI;IAC1B,IAAMC,KAAK,GAAGH,KAAI,CAACI,KAAK,CAACF,IAAI,CAAC;IAC9B,IAAIlB,KAAK,CAACkB,IAAI,CAAC,IAAIA,IAAI,CAACN,IAAI,KAAK,MAAM,EAAE;MACvC,OAAOO,KAAK,CAACE,IAAI,CAACpB,mBAAmB,CAAC,CAACqB,OAAO,EAAE;;IAElD,OAAOH,KAAK,CAACI,MAAM,CAACtB,mBAAmB,CAAC,CAACqB,OAAO,EAAE;EACpD,CAAC,CAAC,CACCC,MAAM;EACL;EACA,oBAAoB;EAClB;EACA,+CAA+C;EAC/C;EACA;EACF;GACD,CACAf,GAAG,CAA2B,UAACS,CAAC,EAAEC,IAAI,EAAI;;IACzC,IAAMC,KAAK,GAAGH,KAAI,CAACI,KAAK,CAACF,IAAI,CAAC;IAC9B,IAAMN,IAAI,GAAGO,KAAK,CAACK,IAAI,CAAC,MAAM,CAAW,CAAC,CAAC;IAC3C;IACA,IAAMX,KAAK,GAAG,CAAAY,EAAA,GAAAN,KAAK,CAACO,GAAG,EAAE,cAAAD,EAAA,cAAAA,EAAA,GAAI,EAAE;IAE/B;IACA,IAAIE,KAAK,CAACC,OAAO,CAACf,KAAK,CAAC,EAAE;MACxB,OAAOA,KAAK,CAACL,GAAG,CAAC,UAACkB,GAAG;QAAA;UACnB;;;;UAIC;YAAEd,IAAI,EAAJA,IAAI;YAAEC,KAAK,EAAEa,GAAG,CAACX,OAAO,CAACZ,KAAK,EAAE,MAAM;UAAC;QAAE;MAAA,CAAC,CAC9C;;IAEH;IACA,OAAO;MAAES,IAAI,EAAJA,IAAI;MAAEC,KAAK,EAAEA,KAAK,CAACE,OAAO,CAACZ,KAAK,EAAE,MAAM;IAAC,CAAE;EACtD,CAAC,CAAC,CACDmB,OAAO,EAAE;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}