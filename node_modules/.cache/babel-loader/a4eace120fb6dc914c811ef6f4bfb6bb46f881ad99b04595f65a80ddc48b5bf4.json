{"ast":null,"code":"import axios from 'axios';\n\n// Search options interface corresponds to the request schema for the /search endpoint without the query, which is the first parameter in  search()\n\n// The Result interface represents a search result object from the API.\n\n// The SearchResponse interface represents the response from the /search endpoint.\n// It includes an array of result objects.\n// FindSimilarOptions interface corresponds to the request schema for the /findSimilar endpoint without the url, which is the first parameter in findSimilar()\n// The DocumentContent interface represents the content of a document from the /contents endpoint.\n// The GetContentsResponse interface represents the response from the /contents endpoint.\n// It includes an array of document content objects.\n// The Metaphor class encapsulates the API's endpoints.\nexport default class Metaphor {\n  constructor(apiKey, baseURL = 'https://api.metaphor.systems') {\n    this.client = void 0;\n    this.client = axios.create({\n      baseURL,\n      headers: {\n        'x-api-key': apiKey\n      }\n    });\n  }\n  async search(query, options) {\n    const response = await this.client.post('/search', {\n      query,\n      ...options\n    });\n    return response.data;\n  }\n  async findSimilar(url, options) {\n    const response = await this.client.post('/findSimilar', {\n      url,\n      ...options\n    });\n    return response.data;\n  }\n  async getContents(ids) {\n    let requestIds;\n\n    // Check if the first element is a string or not. If it's a string, it's an ID array.\n    if (typeof ids[0] === 'string') {\n      requestIds = ids;\n    } else {\n      // If it's not a string, then it's a Result array.\n      requestIds = ids.map(result => result.id);\n    }\n    const response = await this.client.get('/contents', {\n      params: {\n        ids: requestIds\n      }\n    });\n    return response.data;\n  }\n}","map":{"version":3,"names":["axios","Metaphor","constructor","apiKey","baseURL","client","create","headers","search","query","options","response","post","data","findSimilar","url","getContents","ids","requestIds","map","result","id","get","params"],"sources":["/Users/Pallavi/metaphor/news-summarizer/src/metaphor/metaphor-api.ts"],"sourcesContent":["import axios, { AxiosInstance } from 'axios';\r\n\r\n// Search options interface corresponds to the request schema for the /search endpoint without the query, which is the first parameter in  search()\r\nexport interface SearchOptions {\r\n  numResults?: number; // Number of search results to return. Maximum 100. Default 10\r\n  includeDomains?: string[]; // Include results only from these domains. Example: [\"example.com\", \"sample.net\"]\r\n  excludeDomains?: string[]; // Exclude results from these domains. Example: [\"excludedomain.comcludeme.net\"]\r\n  startCrawlDate?: string; // Include results only that were crawled after this date. Must be in ISO 8601 format. Example: \"2023-01-01\"\r\n  endCrawlDate?: string; // Include results only that were crawled before this date. Must be in ISO 8601 format. Example: \"2023-12-31\"\r\n  startPublishedDate?: string; // Include only links with a published date after this. Must be in ISO 8601 format. Example: \"2023-01-01\"\r\n  endPublishedDate?: string; // Include only links with a published date before this. Must be in ISO 8601 format. Example: \"2023-12-31\"\r\n  useAutoprompt?: boolean; // Uses Metaphor-optimized query.\r\n  type?: string; // Search can be 'keyword' or 'neural'. Default is 'neural'\r\n}\r\n\r\n// The Result interface represents a search result object from the API.\r\nexport interface Result {\r\n  title: string;\r\n  url: string;\r\n  publishedDate?: string;\r\n  author?: string;\r\n  score: number;\r\n  id: string;\r\n}\r\n\r\n// The SearchResponse interface represents the response from the /search endpoint.\r\n// It includes an array of result objects.\r\nexport interface SearchResponse {\r\n  results: Result[];\r\n  autopromptString?: string; // The autoprompt string for the query, if useAutoprompt was on.\r\n}\r\n\r\n// FindSimilarOptions interface corresponds to the request schema for the /findSimilar endpoint without the url, which is the first parameter in findSimilar()\r\nexport interface FindSimilarOptions {\r\n  numResults?: number; // Number of search results to return. Maximum 100. Default 10\r\n  includeDomains?: string[]; // Include results only from these domains. Example: [\"example.com\", \"sample.net\"]\r\n  excludeDomains?: string[]; // Exclude results from these domains. Example: [\"excludedomain.com\", \"excludeme.net\"]\r\n  startCrawlDate?: string; // The optional start date (inclusive) for the crawled data. Must be specified in ISO 8601 format. Example: \"2023-01-01\"\r\n  endCrawlDate?: string; // The optional end date (inclusive) for the crawled data. Must be specified in ISO 8601 format. Example: \"2023-12-31\"\r\n  startPublishedDate?: string; // The optional start date (inclusive) for the published data. Must be specified in ISO 8601 format. Example: \"2023-01-01\"\r\n  endPublishedDate?: string; // The optional end date (inclusive) for the published data. Must be specified in ISO 8601 format. Example: \"2023-12-31\"\r\n}\r\n\r\n// The DocumentContent interface represents the content of a document from the /contents endpoint.\r\nexport interface DocumentContent {\r\n  id: string // The ID of the document.\r\n  url: string; // The URL of the document.\r\n  title: string; // The title of the document.\r\n  extract: string; // The first 1000 tokens of content in the document.\r\n}\r\n\r\n// The GetContentsResponse interface represents the response from the /contents endpoint.\r\n// It includes an array of document content objects.\r\nexport interface GetContentsResponse {\r\n  contents: DocumentContent[];\r\n}\r\n\r\n// The Metaphor class encapsulates the API's endpoints.\r\nexport default class Metaphor {\r\n  private client: AxiosInstance;\r\n\r\n  constructor(apiKey: string, baseURL: string = 'https://api.metaphor.systems') {\r\n    this.client = axios.create({ baseURL,\r\n      headers: {\r\n        'x-api-key': apiKey\r\n      }\r\n    });\r\n  }\r\n\r\n  async search(query: string, options?: SearchOptions): Promise<SearchResponse> {\r\n    const response = await this.client.post<SearchResponse>('/search', {query, ...options});\r\n    return response.data;\r\n  }\r\n\r\n  async findSimilar(url: string, options?: FindSimilarOptions): Promise<SearchResponse> {\r\n    const response = await this.client.post<SearchResponse>('/findSimilar', {url, ...options});\r\n    return response.data;\r\n  }\r\n\r\n  async getContents(ids: string[] | Result[]): Promise<GetContentsResponse> {\r\n    let requestIds: string[];\r\n\r\n    // Check if the first element is a string or not. If it's a string, it's an ID array.\r\n    if (typeof ids[0] === 'string') {\r\n      requestIds = ids as string[];\r\n    } else {\r\n      // If it's not a string, then it's a Result array.\r\n      requestIds = (ids as Result[]).map(result => result.id);\r\n    }\r\n\r\n    const response = await this.client.get<GetContentsResponse>('/contents', { params: { ids: requestIds } });\r\n    return response.data;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;;AAE5C;;AAaA;;AAUA;AACA;AAMA;AAWA;AAQA;AACA;AAKA;AACA,eAAe,MAAMC,QAAQ,CAAC;EAG5BC,WAAWA,CAACC,MAAc,EAAEC,OAAe,GAAG,8BAA8B,EAAE;IAAA,KAFtEC,MAAM;IAGZ,IAAI,CAACA,MAAM,GAAGL,KAAK,CAACM,MAAM,CAAC;MAAEF,OAAO;MAClCG,OAAO,EAAE;QACP,WAAW,EAAEJ;MACf;IACF,CAAC,CAAC;EACJ;EAEA,MAAMK,MAAMA,CAACC,KAAa,EAAEC,OAAuB,EAA2B;IAC5E,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACN,MAAM,CAACO,IAAI,CAAiB,SAAS,EAAE;MAACH,KAAK;MAAE,GAAGC;IAAO,CAAC,CAAC;IACvF,OAAOC,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMC,WAAWA,CAACC,GAAW,EAAEL,OAA4B,EAA2B;IACpF,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACN,MAAM,CAACO,IAAI,CAAiB,cAAc,EAAE;MAACG,GAAG;MAAE,GAAGL;IAAO,CAAC,CAAC;IAC1F,OAAOC,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMG,WAAWA,CAACC,GAAwB,EAAgC;IACxE,IAAIC,UAAoB;;IAExB;IACA,IAAI,OAAOD,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9BC,UAAU,GAAGD,GAAe;IAC9B,CAAC,MAAM;MACL;MACAC,UAAU,GAAID,GAAG,CAAcE,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,EAAE,CAAC;IACzD;IAEA,MAAMV,QAAQ,GAAG,MAAM,IAAI,CAACN,MAAM,CAACiB,GAAG,CAAsB,WAAW,EAAE;MAAEC,MAAM,EAAE;QAAEN,GAAG,EAAEC;MAAW;IAAE,CAAC,CAAC;IACzG,OAAOP,QAAQ,CAACE,IAAI;EACtB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}