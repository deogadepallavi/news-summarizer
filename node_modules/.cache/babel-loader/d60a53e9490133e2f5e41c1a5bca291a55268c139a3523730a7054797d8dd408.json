{"ast":null,"code":"import _objectSpread from \"/Users/Pallavi/metaphor/news-summarizer/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/Pallavi/metaphor/news-summarizer/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Pallavi/metaphor/news-summarizer/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID } from '../common/html.js';\nimport { TokenType, getTokenAttr } from '../common/token.js';\n//Misc constants\nvar HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nvar AA_OUTER_LOOP_ITER = 8;\nvar AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n  InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n  InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n  InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n  InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n  InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n  InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n  InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n  InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n  InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n  InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n  InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n  InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n  InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n  InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n  InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n  InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nvar BASE_LOC = {\n  startLine: -1,\n  startCol: -1,\n  startOffset: -1,\n  endLine: -1,\n  endCol: -1,\n  endOffset: -1\n};\nvar TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nvar defaultParserOptions = {\n  scriptingEnabled: true,\n  sourceCodeLocationInfo: false,\n  treeAdapter: defaultTreeAdapter,\n  onParseError: null\n};\n//Parser\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(options, document) {\n    var fragmentContext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var scriptHandler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    _classCallCheck(this, Parser);\n    this.fragmentContext = fragmentContext;\n    this.scriptHandler = scriptHandler;\n    this.currentToken = null;\n    this.stopped = false;\n    this.insertionMode = InsertionMode.INITIAL;\n    this.originalInsertionMode = InsertionMode.INITIAL;\n    this.headElement = null;\n    this.formElement = null;\n    /** Indicates that the current node is not an element in the HTML namespace */\n    this.currentNotInHTML = false;\n    /**\n     * The template insertion mode stack is maintained from the left.\n     * Ie. the topmost element will always have index 0.\n     */\n    this.tmplInsertionModeStack = [];\n    this.pendingCharacterTokens = [];\n    this.hasNonWhitespacePendingCharacterToken = false;\n    this.framesetOk = true;\n    this.skipNextNewLine = false;\n    this.fosterParentingEnabled = false;\n    this.options = _objectSpread(_objectSpread({}, defaultParserOptions), options);\n    this.treeAdapter = this.options.treeAdapter;\n    this.onParseError = this.options.onParseError;\n    // Always enable location info if we report parse errors.\n    if (this.onParseError) {\n      this.options.sourceCodeLocationInfo = true;\n    }\n    this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n    this.tokenizer = new Tokenizer(this.options, this);\n    this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n    this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n    this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n    this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n  }\n  // API\n  _createClass(Parser, [{\n    key: \"getFragment\",\n    value: function getFragment() {\n      var rootElement = this.treeAdapter.getFirstChild(this.document);\n      var fragment = this.treeAdapter.createDocumentFragment();\n      this._adoptNodes(rootElement, fragment);\n      return fragment;\n    }\n    //Errors\n  }, {\n    key: \"_err\",\n    value: function _err(token, code, beforeToken) {\n      var _a;\n      if (!this.onParseError) return;\n      var loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n      var err = {\n        code: code,\n        startLine: loc.startLine,\n        startCol: loc.startCol,\n        startOffset: loc.startOffset,\n        endLine: beforeToken ? loc.startLine : loc.endLine,\n        endCol: beforeToken ? loc.startCol : loc.endCol,\n        endOffset: beforeToken ? loc.startOffset : loc.endOffset\n      };\n      this.onParseError(err);\n    }\n    //Stack events\n  }, {\n    key: \"onItemPush\",\n    value: function onItemPush(node, tid, isTop) {\n      var _a, _b;\n      (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n      if (isTop && this.openElements.stackTop > 0) this._setContextModes(node, tid);\n    }\n  }, {\n    key: \"onItemPop\",\n    value: function onItemPop(node, isTop) {\n      var _a, _b;\n      if (this.options.sourceCodeLocationInfo) {\n        this._setEndLocation(node, this.currentToken);\n      }\n      (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n      if (isTop) {\n        var current;\n        var currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n          current = this.fragmentContext;\n          currentTagId = this.fragmentContextID;\n        } else {\n          var _this$openElements = this.openElements;\n          current = _this$openElements.current;\n          currentTagId = _this$openElements.currentTagId;\n        }\n        this._setContextModes(current, currentTagId);\n      }\n    }\n  }, {\n    key: \"_setContextModes\",\n    value: function _setContextModes(current, tid) {\n      var isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n      this.currentNotInHTML = !isHTML;\n      this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n  }, {\n    key: \"_switchToTextParsing\",\n    value: function _switchToTextParsing(currentToken, nextTokenizerState) {\n      this._insertElement(currentToken, NS.HTML);\n      this.tokenizer.state = nextTokenizerState;\n      this.originalInsertionMode = this.insertionMode;\n      this.insertionMode = InsertionMode.TEXT;\n    }\n  }, {\n    key: \"switchToPlaintextParsing\",\n    value: function switchToPlaintextParsing() {\n      this.insertionMode = InsertionMode.TEXT;\n      this.originalInsertionMode = InsertionMode.IN_BODY;\n      this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n  }, {\n    key: \"_getAdjustedCurrentElement\",\n    value: function _getAdjustedCurrentElement() {\n      return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;\n    }\n  }, {\n    key: \"_findFormInFragmentContext\",\n    value: function _findFormInFragmentContext() {\n      var node = this.fragmentContext;\n      while (node) {\n        if (this.treeAdapter.getTagName(node) === TN.FORM) {\n          this.formElement = node;\n          break;\n        }\n        node = this.treeAdapter.getParentNode(node);\n      }\n    }\n  }, {\n    key: \"_initTokenizerForFragmentParsing\",\n    value: function _initTokenizerForFragmentParsing() {\n      if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n        return;\n      }\n      switch (this.fragmentContextID) {\n        case $.TITLE:\n        case $.TEXTAREA:\n          {\n            this.tokenizer.state = TokenizerMode.RCDATA;\n            break;\n          }\n        case $.STYLE:\n        case $.XMP:\n        case $.IFRAME:\n        case $.NOEMBED:\n        case $.NOFRAMES:\n        case $.NOSCRIPT:\n          {\n            this.tokenizer.state = TokenizerMode.RAWTEXT;\n            break;\n          }\n        case $.SCRIPT:\n          {\n            this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n            break;\n          }\n        case $.PLAINTEXT:\n          {\n            this.tokenizer.state = TokenizerMode.PLAINTEXT;\n            break;\n          }\n        default:\n        // Do nothing\n      }\n    }\n    //Tree mutation\n  }, {\n    key: \"_setDocumentType\",\n    value: function _setDocumentType(token) {\n      var _this = this;\n      var name = token.name || '';\n      var publicId = token.publicId || '';\n      var systemId = token.systemId || '';\n      this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n      if (token.location) {\n        var documentChildren = this.treeAdapter.getChildNodes(this.document);\n        var docTypeNode = documentChildren.find(function (node) {\n          return _this.treeAdapter.isDocumentTypeNode(node);\n        });\n        if (docTypeNode) {\n          this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n        }\n      }\n    }\n  }, {\n    key: \"_attachElementToTree\",\n    value: function _attachElementToTree(element, location) {\n      if (this.options.sourceCodeLocationInfo) {\n        var loc = location && _objectSpread(_objectSpread({}, location), {}, {\n          startTag: location\n        });\n        this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n      }\n      if (this._shouldFosterParentOnInsertion()) {\n        this._fosterParentElement(element);\n      } else {\n        var parent = this.openElements.currentTmplContentOrNode;\n        this.treeAdapter.appendChild(parent, element);\n      }\n    }\n  }, {\n    key: \"_appendElement\",\n    value: function _appendElement(token, namespaceURI) {\n      var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n      this._attachElementToTree(element, token.location);\n    }\n  }, {\n    key: \"_insertElement\",\n    value: function _insertElement(token, namespaceURI) {\n      var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n      this._attachElementToTree(element, token.location);\n      this.openElements.push(element, token.tagID);\n    }\n  }, {\n    key: \"_insertFakeElement\",\n    value: function _insertFakeElement(tagName, tagID) {\n      var element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n      this._attachElementToTree(element, null);\n      this.openElements.push(element, tagID);\n    }\n  }, {\n    key: \"_insertTemplate\",\n    value: function _insertTemplate(token) {\n      var tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n      var content = this.treeAdapter.createDocumentFragment();\n      this.treeAdapter.setTemplateContent(tmpl, content);\n      this._attachElementToTree(tmpl, token.location);\n      this.openElements.push(tmpl, token.tagID);\n      if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n  }, {\n    key: \"_insertFakeRootElement\",\n    value: function _insertFakeRootElement() {\n      var element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n      if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(element, null);\n      this.treeAdapter.appendChild(this.openElements.current, element);\n      this.openElements.push(element, $.HTML);\n    }\n  }, {\n    key: \"_appendCommentNode\",\n    value: function _appendCommentNode(token, parent) {\n      var commentNode = this.treeAdapter.createCommentNode(token.data);\n      this.treeAdapter.appendChild(parent, commentNode);\n      if (this.options.sourceCodeLocationInfo) {\n        this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n      }\n    }\n  }, {\n    key: \"_insertCharacters\",\n    value: function _insertCharacters(token) {\n      var parent;\n      var beforeElement;\n      if (this._shouldFosterParentOnInsertion()) {\n        var _this$_findFosterPare = this._findFosterParentingLocation();\n        parent = _this$_findFosterPare.parent;\n        beforeElement = _this$_findFosterPare.beforeElement;\n        if (beforeElement) {\n          this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n        } else {\n          this.treeAdapter.insertText(parent, token.chars);\n        }\n      } else {\n        parent = this.openElements.currentTmplContentOrNode;\n        this.treeAdapter.insertText(parent, token.chars);\n      }\n      if (!token.location) return;\n      var siblings = this.treeAdapter.getChildNodes(parent);\n      var textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n      var textNode = siblings[textNodeIdx - 1];\n      //NOTE: if we have a location assigned by another token, then just update the end position\n      var tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n      if (tnLoc) {\n        var _token$location = token.location,\n          endLine = _token$location.endLine,\n          endCol = _token$location.endCol,\n          endOffset = _token$location.endOffset;\n        this.treeAdapter.updateNodeSourceCodeLocation(textNode, {\n          endLine: endLine,\n          endCol: endCol,\n          endOffset: endOffset\n        });\n      } else if (this.options.sourceCodeLocationInfo) {\n        this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n      }\n    }\n  }, {\n    key: \"_adoptNodes\",\n    value: function _adoptNodes(donor, recipient) {\n      for (var child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n        this.treeAdapter.detachNode(child);\n        this.treeAdapter.appendChild(recipient, child);\n      }\n    }\n  }, {\n    key: \"_setEndLocation\",\n    value: function _setEndLocation(element, closingToken) {\n      if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n        var ctLoc = closingToken.location;\n        var tn = this.treeAdapter.getTagName(element);\n        var endLoc =\n        // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n        // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n        closingToken.type === TokenType.END_TAG && tn === closingToken.tagName ? {\n          endTag: _objectSpread({}, ctLoc),\n          endLine: ctLoc.endLine,\n          endCol: ctLoc.endCol,\n          endOffset: ctLoc.endOffset\n        } : {\n          endLine: ctLoc.startLine,\n          endCol: ctLoc.startCol,\n          endOffset: ctLoc.startOffset\n        };\n        this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n      }\n    }\n    //Token processing\n  }, {\n    key: \"shouldProcessStartTagTokenInForeignContent\",\n    value: function shouldProcessStartTagTokenInForeignContent(token) {\n      // Check that neither current === document, or ns === NS.HTML\n      if (!this.currentNotInHTML) return false;\n      var current;\n      var currentTagId;\n      if (this.openElements.stackTop === 0 && this.fragmentContext) {\n        current = this.fragmentContext;\n        currentTagId = this.fragmentContextID;\n      } else {\n        var _this$openElements2 = this.openElements;\n        current = _this$openElements2.current;\n        currentTagId = _this$openElements2.currentTagId;\n      }\n      if (token.tagID === $.SVG && this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n        return false;\n      }\n      return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n        // If it _is_ an integration point, then we might have to check that it is not an HTML\n        // integration point.\n        (token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) && !this._isIntegrationPoint(currentTagId, current, NS.HTML)\n      );\n    }\n  }, {\n    key: \"_processToken\",\n    value: function _processToken(token) {\n      switch (token.type) {\n        case TokenType.CHARACTER:\n          {\n            this.onCharacter(token);\n            break;\n          }\n        case TokenType.NULL_CHARACTER:\n          {\n            this.onNullCharacter(token);\n            break;\n          }\n        case TokenType.COMMENT:\n          {\n            this.onComment(token);\n            break;\n          }\n        case TokenType.DOCTYPE:\n          {\n            this.onDoctype(token);\n            break;\n          }\n        case TokenType.START_TAG:\n          {\n            this._processStartTag(token);\n            break;\n          }\n        case TokenType.END_TAG:\n          {\n            this.onEndTag(token);\n            break;\n          }\n        case TokenType.EOF:\n          {\n            this.onEof(token);\n            break;\n          }\n        case TokenType.WHITESPACE_CHARACTER:\n          {\n            this.onWhitespaceCharacter(token);\n            break;\n          }\n      }\n    }\n    //Integration points\n  }, {\n    key: \"_isIntegrationPoint\",\n    value: function _isIntegrationPoint(tid, element, foreignNS) {\n      var ns = this.treeAdapter.getNamespaceURI(element);\n      var attrs = this.treeAdapter.getAttrList(element);\n      return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n  }, {\n    key: \"_reconstructActiveFormattingElements\",\n    value: function _reconstructActiveFormattingElements() {\n      var _this2 = this;\n      var listLength = this.activeFormattingElements.entries.length;\n      if (listLength) {\n        var endIndex = this.activeFormattingElements.entries.findIndex(function (entry) {\n          return entry.type === EntryType.Marker || _this2.openElements.contains(entry.element);\n        });\n        var unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n        for (var i = unopenIdx; i >= 0; i--) {\n          var entry = this.activeFormattingElements.entries[i];\n          this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n          entry.element = this.openElements.current;\n        }\n      }\n    }\n    //Close elements\n  }, {\n    key: \"_closeTableCell\",\n    value: function _closeTableCell() {\n      this.openElements.generateImpliedEndTags();\n      this.openElements.popUntilTableCellPopped();\n      this.activeFormattingElements.clearToLastMarker();\n      this.insertionMode = InsertionMode.IN_ROW;\n    }\n  }, {\n    key: \"_closePElement\",\n    value: function _closePElement() {\n      this.openElements.generateImpliedEndTagsWithExclusion($.P);\n      this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n  }, {\n    key: \"_resetInsertionMode\",\n    value: function _resetInsertionMode() {\n      for (var i = this.openElements.stackTop; i >= 0; i--) {\n        //Insertion mode reset map\n        switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n          case $.TR:\n            {\n              this.insertionMode = InsertionMode.IN_ROW;\n              return;\n            }\n          case $.TBODY:\n          case $.THEAD:\n          case $.TFOOT:\n            {\n              this.insertionMode = InsertionMode.IN_TABLE_BODY;\n              return;\n            }\n          case $.CAPTION:\n            {\n              this.insertionMode = InsertionMode.IN_CAPTION;\n              return;\n            }\n          case $.COLGROUP:\n            {\n              this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n              return;\n            }\n          case $.TABLE:\n            {\n              this.insertionMode = InsertionMode.IN_TABLE;\n              return;\n            }\n          case $.BODY:\n            {\n              this.insertionMode = InsertionMode.IN_BODY;\n              return;\n            }\n          case $.FRAMESET:\n            {\n              this.insertionMode = InsertionMode.IN_FRAMESET;\n              return;\n            }\n          case $.SELECT:\n            {\n              this._resetInsertionModeForSelect(i);\n              return;\n            }\n          case $.TEMPLATE:\n            {\n              this.insertionMode = this.tmplInsertionModeStack[0];\n              return;\n            }\n          case $.HTML:\n            {\n              this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n              return;\n            }\n          case $.TD:\n          case $.TH:\n            {\n              if (i > 0) {\n                this.insertionMode = InsertionMode.IN_CELL;\n                return;\n              }\n              break;\n            }\n          case $.HEAD:\n            {\n              if (i > 0) {\n                this.insertionMode = InsertionMode.IN_HEAD;\n                return;\n              }\n              break;\n            }\n        }\n      }\n      this.insertionMode = InsertionMode.IN_BODY;\n    }\n  }, {\n    key: \"_resetInsertionModeForSelect\",\n    value: function _resetInsertionModeForSelect(selectIdx) {\n      if (selectIdx > 0) {\n        for (var i = selectIdx - 1; i > 0; i--) {\n          var tn = this.openElements.tagIDs[i];\n          if (tn === $.TEMPLATE) {\n            break;\n          } else if (tn === $.TABLE) {\n            this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n            return;\n          }\n        }\n      }\n      this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n  }, {\n    key: \"_isElementCausesFosterParenting\",\n    value: function _isElementCausesFosterParenting(tn) {\n      return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n  }, {\n    key: \"_shouldFosterParentOnInsertion\",\n    value: function _shouldFosterParentOnInsertion() {\n      return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n  }, {\n    key: \"_findFosterParentingLocation\",\n    value: function _findFosterParentingLocation() {\n      for (var i = this.openElements.stackTop; i >= 0; i--) {\n        var openElement = this.openElements.items[i];\n        switch (this.openElements.tagIDs[i]) {\n          case $.TEMPLATE:\n            {\n              if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                return {\n                  parent: this.treeAdapter.getTemplateContent(openElement),\n                  beforeElement: null\n                };\n              }\n              break;\n            }\n          case $.TABLE:\n            {\n              var parent = this.treeAdapter.getParentNode(openElement);\n              if (parent) {\n                return {\n                  parent: parent,\n                  beforeElement: openElement\n                };\n              }\n              return {\n                parent: this.openElements.items[i - 1],\n                beforeElement: null\n              };\n            }\n          default:\n          // Do nothing\n        }\n      }\n\n      return {\n        parent: this.openElements.items[0],\n        beforeElement: null\n      };\n    }\n  }, {\n    key: \"_fosterParentElement\",\n    value: function _fosterParentElement(element) {\n      var location = this._findFosterParentingLocation();\n      if (location.beforeElement) {\n        this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n      } else {\n        this.treeAdapter.appendChild(location.parent, element);\n      }\n    }\n    //Special elements\n  }, {\n    key: \"_isSpecialElement\",\n    value: function _isSpecialElement(element, id) {\n      var ns = this.treeAdapter.getNamespaceURI(element);\n      return SPECIAL_ELEMENTS[ns].has(id);\n    }\n  }, {\n    key: \"onCharacter\",\n    value: function onCharacter(token) {\n      this.skipNextNewLine = false;\n      if (this.tokenizer.inForeignNode) {\n        characterInForeignContent(this, token);\n        return;\n      }\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          {\n            tokenInInitialMode(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HTML:\n          {\n            tokenBeforeHtml(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HEAD:\n          {\n            tokenBeforeHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_HEAD:\n          {\n            tokenInHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n          {\n            tokenInHeadNoScript(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_HEAD:\n          {\n            tokenAfterHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_BODY:\n        case InsertionMode.IN_CAPTION:\n        case InsertionMode.IN_CELL:\n        case InsertionMode.IN_TEMPLATE:\n          {\n            characterInBody(this, token);\n            break;\n          }\n        case InsertionMode.TEXT:\n        case InsertionMode.IN_SELECT:\n        case InsertionMode.IN_SELECT_IN_TABLE:\n          {\n            this._insertCharacters(token);\n            break;\n          }\n        case InsertionMode.IN_TABLE:\n        case InsertionMode.IN_TABLE_BODY:\n        case InsertionMode.IN_ROW:\n          {\n            characterInTable(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE_TEXT:\n          {\n            characterInTableText(this, token);\n            break;\n          }\n        case InsertionMode.IN_COLUMN_GROUP:\n          {\n            tokenInColumnGroup(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_BODY:\n          {\n            tokenAfterBody(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_AFTER_BODY:\n          {\n            tokenAfterAfterBody(this, token);\n            break;\n          }\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onNullCharacter\",\n    value: function onNullCharacter(token) {\n      this.skipNextNewLine = false;\n      if (this.tokenizer.inForeignNode) {\n        nullCharacterInForeignContent(this, token);\n        return;\n      }\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          {\n            tokenInInitialMode(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HTML:\n          {\n            tokenBeforeHtml(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HEAD:\n          {\n            tokenBeforeHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_HEAD:\n          {\n            tokenInHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n          {\n            tokenInHeadNoScript(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_HEAD:\n          {\n            tokenAfterHead(this, token);\n            break;\n          }\n        case InsertionMode.TEXT:\n          {\n            this._insertCharacters(token);\n            break;\n          }\n        case InsertionMode.IN_TABLE:\n        case InsertionMode.IN_TABLE_BODY:\n        case InsertionMode.IN_ROW:\n          {\n            characterInTable(this, token);\n            break;\n          }\n        case InsertionMode.IN_COLUMN_GROUP:\n          {\n            tokenInColumnGroup(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_BODY:\n          {\n            tokenAfterBody(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_AFTER_BODY:\n          {\n            tokenAfterAfterBody(this, token);\n            break;\n          }\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onComment\",\n    value: function onComment(token) {\n      this.skipNextNewLine = false;\n      if (this.currentNotInHTML) {\n        appendComment(this, token);\n        return;\n      }\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n        case InsertionMode.BEFORE_HTML:\n        case InsertionMode.BEFORE_HEAD:\n        case InsertionMode.IN_HEAD:\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n        case InsertionMode.AFTER_HEAD:\n        case InsertionMode.IN_BODY:\n        case InsertionMode.IN_TABLE:\n        case InsertionMode.IN_CAPTION:\n        case InsertionMode.IN_COLUMN_GROUP:\n        case InsertionMode.IN_TABLE_BODY:\n        case InsertionMode.IN_ROW:\n        case InsertionMode.IN_CELL:\n        case InsertionMode.IN_SELECT:\n        case InsertionMode.IN_SELECT_IN_TABLE:\n        case InsertionMode.IN_TEMPLATE:\n        case InsertionMode.IN_FRAMESET:\n        case InsertionMode.AFTER_FRAMESET:\n          {\n            appendComment(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE_TEXT:\n          {\n            tokenInTableText(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_BODY:\n          {\n            appendCommentToRootHtmlElement(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_AFTER_BODY:\n        case InsertionMode.AFTER_AFTER_FRAMESET:\n          {\n            appendCommentToDocument(this, token);\n            break;\n          }\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onDoctype\",\n    value: function onDoctype(token) {\n      this.skipNextNewLine = false;\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          {\n            doctypeInInitialMode(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HEAD:\n        case InsertionMode.IN_HEAD:\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n        case InsertionMode.AFTER_HEAD:\n          {\n            this._err(token, ERR.misplacedDoctype);\n            break;\n          }\n        case InsertionMode.IN_TABLE_TEXT:\n          {\n            tokenInTableText(this, token);\n            break;\n          }\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onStartTag\",\n    value: function onStartTag(token) {\n      this.skipNextNewLine = false;\n      this.currentToken = token;\n      this._processStartTag(token);\n      if (token.selfClosing && !token.ackSelfClosing) {\n        this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n      }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n  }, {\n    key: \"_processStartTag\",\n    value: function _processStartTag(token) {\n      if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n        startTagInForeignContent(this, token);\n      } else {\n        this._startTagOutsideForeignContent(token);\n      }\n    }\n  }, {\n    key: \"_startTagOutsideForeignContent\",\n    value: function _startTagOutsideForeignContent(token) {\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          {\n            tokenInInitialMode(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HTML:\n          {\n            startTagBeforeHtml(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HEAD:\n          {\n            startTagBeforeHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_HEAD:\n          {\n            startTagInHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n          {\n            startTagInHeadNoScript(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_HEAD:\n          {\n            startTagAfterHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_BODY:\n          {\n            startTagInBody(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE:\n          {\n            startTagInTable(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE_TEXT:\n          {\n            tokenInTableText(this, token);\n            break;\n          }\n        case InsertionMode.IN_CAPTION:\n          {\n            startTagInCaption(this, token);\n            break;\n          }\n        case InsertionMode.IN_COLUMN_GROUP:\n          {\n            startTagInColumnGroup(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE_BODY:\n          {\n            startTagInTableBody(this, token);\n            break;\n          }\n        case InsertionMode.IN_ROW:\n          {\n            startTagInRow(this, token);\n            break;\n          }\n        case InsertionMode.IN_CELL:\n          {\n            startTagInCell(this, token);\n            break;\n          }\n        case InsertionMode.IN_SELECT:\n          {\n            startTagInSelect(this, token);\n            break;\n          }\n        case InsertionMode.IN_SELECT_IN_TABLE:\n          {\n            startTagInSelectInTable(this, token);\n            break;\n          }\n        case InsertionMode.IN_TEMPLATE:\n          {\n            startTagInTemplate(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_BODY:\n          {\n            startTagAfterBody(this, token);\n            break;\n          }\n        case InsertionMode.IN_FRAMESET:\n          {\n            startTagInFrameset(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_FRAMESET:\n          {\n            startTagAfterFrameset(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_AFTER_BODY:\n          {\n            startTagAfterAfterBody(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_AFTER_FRAMESET:\n          {\n            startTagAfterAfterFrameset(this, token);\n            break;\n          }\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onEndTag\",\n    value: function onEndTag(token) {\n      this.skipNextNewLine = false;\n      this.currentToken = token;\n      if (this.currentNotInHTML) {\n        endTagInForeignContent(this, token);\n      } else {\n        this._endTagOutsideForeignContent(token);\n      }\n    }\n  }, {\n    key: \"_endTagOutsideForeignContent\",\n    value: function _endTagOutsideForeignContent(token) {\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          {\n            tokenInInitialMode(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HTML:\n          {\n            endTagBeforeHtml(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HEAD:\n          {\n            endTagBeforeHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_HEAD:\n          {\n            endTagInHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n          {\n            endTagInHeadNoScript(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_HEAD:\n          {\n            endTagAfterHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_BODY:\n          {\n            endTagInBody(this, token);\n            break;\n          }\n        case InsertionMode.TEXT:\n          {\n            endTagInText(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE:\n          {\n            endTagInTable(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE_TEXT:\n          {\n            tokenInTableText(this, token);\n            break;\n          }\n        case InsertionMode.IN_CAPTION:\n          {\n            endTagInCaption(this, token);\n            break;\n          }\n        case InsertionMode.IN_COLUMN_GROUP:\n          {\n            endTagInColumnGroup(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE_BODY:\n          {\n            endTagInTableBody(this, token);\n            break;\n          }\n        case InsertionMode.IN_ROW:\n          {\n            endTagInRow(this, token);\n            break;\n          }\n        case InsertionMode.IN_CELL:\n          {\n            endTagInCell(this, token);\n            break;\n          }\n        case InsertionMode.IN_SELECT:\n          {\n            endTagInSelect(this, token);\n            break;\n          }\n        case InsertionMode.IN_SELECT_IN_TABLE:\n          {\n            endTagInSelectInTable(this, token);\n            break;\n          }\n        case InsertionMode.IN_TEMPLATE:\n          {\n            endTagInTemplate(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_BODY:\n          {\n            endTagAfterBody(this, token);\n            break;\n          }\n        case InsertionMode.IN_FRAMESET:\n          {\n            endTagInFrameset(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_FRAMESET:\n          {\n            endTagAfterFrameset(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_AFTER_BODY:\n          {\n            tokenAfterAfterBody(this, token);\n            break;\n          }\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onEof\",\n    value: function onEof(token) {\n      switch (this.insertionMode) {\n        case InsertionMode.INITIAL:\n          {\n            tokenInInitialMode(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HTML:\n          {\n            tokenBeforeHtml(this, token);\n            break;\n          }\n        case InsertionMode.BEFORE_HEAD:\n          {\n            tokenBeforeHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_HEAD:\n          {\n            tokenInHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n          {\n            tokenInHeadNoScript(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_HEAD:\n          {\n            tokenAfterHead(this, token);\n            break;\n          }\n        case InsertionMode.IN_BODY:\n        case InsertionMode.IN_TABLE:\n        case InsertionMode.IN_CAPTION:\n        case InsertionMode.IN_COLUMN_GROUP:\n        case InsertionMode.IN_TABLE_BODY:\n        case InsertionMode.IN_ROW:\n        case InsertionMode.IN_CELL:\n        case InsertionMode.IN_SELECT:\n        case InsertionMode.IN_SELECT_IN_TABLE:\n          {\n            eofInBody(this, token);\n            break;\n          }\n        case InsertionMode.TEXT:\n          {\n            eofInText(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE_TEXT:\n          {\n            tokenInTableText(this, token);\n            break;\n          }\n        case InsertionMode.IN_TEMPLATE:\n          {\n            eofInTemplate(this, token);\n            break;\n          }\n        case InsertionMode.AFTER_BODY:\n        case InsertionMode.IN_FRAMESET:\n        case InsertionMode.AFTER_FRAMESET:\n        case InsertionMode.AFTER_AFTER_BODY:\n        case InsertionMode.AFTER_AFTER_FRAMESET:\n          {\n            stopParsing(this, token);\n            break;\n          }\n        default:\n        // Do nothing\n      }\n    }\n  }, {\n    key: \"onWhitespaceCharacter\",\n    value: function onWhitespaceCharacter(token) {\n      if (this.skipNextNewLine) {\n        this.skipNextNewLine = false;\n        if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n          if (token.chars.length === 1) {\n            return;\n          }\n          token.chars = token.chars.substr(1);\n        }\n      }\n      if (this.tokenizer.inForeignNode) {\n        this._insertCharacters(token);\n        return;\n      }\n      switch (this.insertionMode) {\n        case InsertionMode.IN_HEAD:\n        case InsertionMode.IN_HEAD_NO_SCRIPT:\n        case InsertionMode.AFTER_HEAD:\n        case InsertionMode.TEXT:\n        case InsertionMode.IN_COLUMN_GROUP:\n        case InsertionMode.IN_SELECT:\n        case InsertionMode.IN_SELECT_IN_TABLE:\n        case InsertionMode.IN_FRAMESET:\n        case InsertionMode.AFTER_FRAMESET:\n          {\n            this._insertCharacters(token);\n            break;\n          }\n        case InsertionMode.IN_BODY:\n        case InsertionMode.IN_CAPTION:\n        case InsertionMode.IN_CELL:\n        case InsertionMode.IN_TEMPLATE:\n        case InsertionMode.AFTER_BODY:\n        case InsertionMode.AFTER_AFTER_BODY:\n        case InsertionMode.AFTER_AFTER_FRAMESET:\n          {\n            whitespaceCharacterInBody(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE:\n        case InsertionMode.IN_TABLE_BODY:\n        case InsertionMode.IN_ROW:\n          {\n            characterInTable(this, token);\n            break;\n          }\n        case InsertionMode.IN_TABLE_TEXT:\n          {\n            whitespaceCharacterInTableText(this, token);\n            break;\n          }\n        default:\n        // Do nothing\n      }\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(html, options) {\n      var parser = new this(options);\n      parser.tokenizer.write(html, true);\n      return parser.document;\n    }\n  }, {\n    key: \"getFragmentParser\",\n    value: function getFragmentParser(fragmentContext, options) {\n      var opts = _objectSpread(_objectSpread({}, defaultParserOptions), options);\n      //NOTE: use a <template> element as the fragment context if no context element was provided,\n      //so we will parse in a \"forgiving\" manner\n      fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []);\n      //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n      //This is important for jsdom, where a new `document` cannot be created. This led to\n      //fragment parsing messing with the main `document`.\n      var documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n      var parser = new this(opts, documentMock, fragmentContext);\n      if (parser.fragmentContextID === $.TEMPLATE) {\n        parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n      }\n      parser._initTokenizerForFragmentParsing();\n      parser._insertFakeRootElement();\n      parser._resetInsertionMode();\n      parser._findFormInFragmentContext();\n      return parser;\n    }\n  }]);\n  return Parser;\n}();\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n  var formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n  if (formattingElementEntry) {\n    if (!p.openElements.contains(formattingElementEntry.element)) {\n      p.activeFormattingElements.removeEntry(formattingElementEntry);\n      formattingElementEntry = null;\n    } else if (!p.openElements.hasInScope(token.tagID)) {\n      formattingElementEntry = null;\n    }\n  } else {\n    genericEndTagInBody(p, token);\n  }\n  return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n  var furthestBlock = null;\n  var idx = p.openElements.stackTop;\n  for (; idx >= 0; idx--) {\n    var element = p.openElements.items[idx];\n    if (element === formattingElementEntry.element) {\n      break;\n    }\n    if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n      furthestBlock = element;\n    }\n  }\n  if (!furthestBlock) {\n    p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n  }\n  return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n  var lastElement = furthestBlock;\n  var nextElement = p.openElements.getCommonAncestor(furthestBlock);\n  for (var i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n    //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n    nextElement = p.openElements.getCommonAncestor(element);\n    var elementEntry = p.activeFormattingElements.getElementEntry(element);\n    var counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n    var shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n    if (shouldRemoveFromOpenElements) {\n      if (counterOverflow) {\n        p.activeFormattingElements.removeEntry(elementEntry);\n      }\n      p.openElements.remove(element);\n    } else {\n      element = aaRecreateElementFromEntry(p, elementEntry);\n      if (lastElement === furthestBlock) {\n        p.activeFormattingElements.bookmark = elementEntry;\n      }\n      p.treeAdapter.detachNode(lastElement);\n      p.treeAdapter.appendChild(element, lastElement);\n      lastElement = element;\n    }\n  }\n  return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n  var ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n  var newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n  p.openElements.replace(elementEntry.element, newElement);\n  elementEntry.element = newElement;\n  return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n  var tn = p.treeAdapter.getTagName(commonAncestor);\n  var tid = getTagID(tn);\n  if (p._isElementCausesFosterParenting(tid)) {\n    p._fosterParentElement(lastElement);\n  } else {\n    var ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n    if (tid === $.TEMPLATE && ns === NS.HTML) {\n      commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n    }\n    p.treeAdapter.appendChild(commonAncestor, lastElement);\n  }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n  var ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n  var token = formattingElementEntry.token;\n  var newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n  p._adoptNodes(furthestBlock, newElement);\n  p.treeAdapter.appendChild(furthestBlock, newElement);\n  p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n  p.activeFormattingElements.removeEntry(formattingElementEntry);\n  p.openElements.remove(formattingElementEntry.element);\n  p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n  for (var i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n    var formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n    if (!formattingElementEntry) {\n      break;\n    }\n    var furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n    if (!furthestBlock) {\n      break;\n    }\n    p.activeFormattingElements.bookmark = formattingElementEntry;\n    var lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n    var commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n    p.treeAdapter.detachNode(lastElement);\n    if (commonAncestor) aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n    aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n  }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n  p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n  p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n  p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n  p.stopped = true;\n  // NOTE: Set end locations for elements that remain on the open element stack.\n  if (token.location) {\n    // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n    // This is a problem, as we might overwrite their end position here.\n    var target = p.fragmentContext ? 0 : 2;\n    for (var i = p.openElements.stackTop; i >= target; i--) {\n      p._setEndLocation(p.openElements.items[i], token);\n    }\n    // Handle `html` and `body`\n    if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n      var htmlElement = p.openElements.items[0];\n      var htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n      if (htmlLocation && !htmlLocation.endTag) {\n        p._setEndLocation(htmlElement, token);\n        if (p.openElements.stackTop >= 1) {\n          var bodyElement = p.openElements.items[1];\n          var bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n          if (bodyLocation && !bodyLocation.endTag) {\n            p._setEndLocation(bodyElement, token);\n          }\n        }\n      }\n    }\n  }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n  p._setDocumentType(token);\n  var mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n  if (!doctype.isConforming(token)) {\n    p._err(token, ERR.nonConformingDoctype);\n  }\n  p.treeAdapter.setDocumentMode(p.document, mode);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n  p._err(token, ERR.missingDoctype, true);\n  p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n  p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n  if (token.tagID === $.HTML) {\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n  } else {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction endTagBeforeHtml(p, token) {\n  var tn = token.tagID;\n  if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction tokenBeforeHtml(p, token) {\n  p._insertFakeRootElement();\n  p.insertionMode = InsertionMode.BEFORE_HEAD;\n  p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    default:\n      {\n        tokenBeforeHead(p, token);\n      }\n  }\n}\nfunction endTagBeforeHead(p, token) {\n  var tn = token.tagID;\n  if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n    tokenBeforeHead(p, token);\n  } else {\n    p._err(token, ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenBeforeHead(p, token) {\n  p._insertFakeElement(TN.HEAD, $.HEAD);\n  p.headElement = p.openElements.current;\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.TITLE:\n      {\n        p._switchToTextParsing(token, TokenizerMode.RCDATA);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n        } else {\n          p._insertElement(token, NS.HTML);\n          p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n        }\n        break;\n      }\n    case $.NOFRAMES:\n    case $.STYLE:\n      {\n        p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n        break;\n      }\n    case $.SCRIPT:\n      {\n        p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        p._insertTemplate(token);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_TEMPLATE;\n        p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._err(token, ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenInHead(p, token);\n      }\n  }\n}\nfunction endTagInHead(p, token) {\n  switch (token.tagID) {\n    case $.HEAD:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.AFTER_HEAD;\n        break;\n      }\n    case $.BODY:\n    case $.BR:\n    case $.HTML:\n      {\n        tokenInHead(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction templateEndTagInHead(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.generateImpliedEndTagsThoroughly();\n    if (p.openElements.currentTagId !== $.TEMPLATE) {\n      p._err(token, ERR.closingOfElementWithOpenChildElements);\n    }\n    p.openElements.popUntilTagNamePopped($.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n  } else {\n    p._err(token, ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenInHead(p, token) {\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.AFTER_HEAD;\n  p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.HEAD:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.STYLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        p._err(token, ERR.nestedNoscriptInHead);\n        break;\n      }\n    default:\n      {\n        tokenInHeadNoScript(p, token);\n      }\n  }\n}\nfunction endTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case $.NOSCRIPT:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    case $.BR:\n      {\n        tokenInHeadNoScript(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenInHeadNoScript(p, token) {\n  var errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n  p._err(token, errCode);\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BODY:\n      {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_BODY;\n        break;\n      }\n    case $.FRAMESET:\n      {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n        break;\n      }\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.SCRIPT:\n    case $.STYLE:\n    case $.TEMPLATE:\n    case $.TITLE:\n      {\n        p._err(token, ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement, $.HEAD);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._err(token, ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenAfterHead(p, token);\n      }\n  }\n}\nfunction endTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case $.BODY:\n    case $.HTML:\n    case $.BR:\n      {\n        tokenAfterHead(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenAfterHead(p, token) {\n  p._insertFakeElement(TN.BODY, $.BODY);\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n  switch (token.type) {\n    case TokenType.CHARACTER:\n      {\n        characterInBody(p, token);\n        break;\n      }\n    case TokenType.WHITESPACE_CHARACTER:\n      {\n        whitespaceCharacterInBody(p, token);\n        break;\n      }\n    case TokenType.COMMENT:\n      {\n        appendComment(p, token);\n        break;\n      }\n    case TokenType.START_TAG:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TokenType.END_TAG:\n      {\n        endTagInBody(p, token);\n        break;\n      }\n    case TokenType.EOF:\n      {\n        eofInBody(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction whitespaceCharacterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n  if (p.openElements.tmplCount === 0) {\n    p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n  }\n}\nfunction bodyStartTagInBody(p, token) {\n  var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (bodyElement && p.openElements.tmplCount === 0) {\n    p.framesetOk = false;\n    p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n  }\n}\nfunction framesetStartTagInBody(p, token) {\n  var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (p.framesetOk && bodyElement) {\n    p.treeAdapter.detachNode(bodyElement);\n    p.openElements.popAllUpToHtmlElement();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_FRAMESET;\n  }\n}\nfunction addressStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  if (isNumberedHeader(p.openElements.currentTagId)) {\n    p.openElements.pop();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n  var inTemplate = p.openElements.tmplCount > 0;\n  if (!p.formElement || inTemplate) {\n    if (p.openElements.hasInButtonScope($.P)) {\n      p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    if (!inTemplate) {\n      p.formElement = p.openElements.current;\n    }\n  }\n}\nfunction listItemStartTagInBody(p, token) {\n  p.framesetOk = false;\n  var tn = token.tagID;\n  for (var i = p.openElements.stackTop; i >= 0; i--) {\n    var elementId = p.openElements.tagIDs[i];\n    if (tn === $.LI && elementId === $.LI || (tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n      p.openElements.popUntilTagNamePopped(elementId);\n      break;\n    }\n    if (elementId !== $.ADDRESS && elementId !== $.DIV && elementId !== $.P && p._isSpecialElement(p.openElements.items[i], elementId)) {\n      break;\n    }\n  }\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BUTTON)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped($.BUTTON);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n  var activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n  if (activeElementEntry) {\n    callAdoptionAgency(p, token);\n    p.openElements.remove(activeElementEntry.element);\n    p.activeFormattingElements.removeEntry(activeElementEntry);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  if (p.openElements.hasInScope($.NOBR)) {\n    callAdoptionAgency(p, token);\n    p._reconstructActiveFormattingElements();\n  }\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.insertMarker();\n  p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n  if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n  var inputType = getTokenAttr(token, ATTRS.TYPE);\n  return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, NS.HTML);\n  if (!isHiddenInput(token)) {\n    p.framesetOk = false;\n  }\n  token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n  p._appendElement(token, NS.HTML);\n  token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._appendElement(token, NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n  token.tagName = TN.IMG;\n  token.tagID = $.IMG;\n  areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n  p._insertElement(token, NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.tokenizer.state = TokenizerMode.RCDATA;\n  p.originalInsertionMode = p.insertionMode;\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._reconstructActiveFormattingElements();\n  p.framesetOk = false;\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n  p.framesetOk = false;\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = p.insertionMode === InsertionMode.IN_TABLE || p.insertionMode === InsertionMode.IN_CAPTION || p.insertionMode === InsertionMode.IN_TABLE_BODY || p.insertionMode === InsertionMode.IN_ROW || p.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n  if (p.openElements.currentTagId === $.OPTION) {\n    p.openElements.pop();\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.RUBY)) {\n    p.openElements.generateImpliedEndTags();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.RUBY)) {\n    p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  foreignContent.adjustTokenMathMLAttrs(token);\n  foreignContent.adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, NS.MATHML);\n  } else {\n    p._insertElement(token, NS.MATHML);\n  }\n  token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  foreignContent.adjustTokenSVGAttrs(token);\n  foreignContent.adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, NS.SVG);\n  } else {\n    p._insertElement(token, NS.SVG);\n  }\n  token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n  switch (token.tagID) {\n    case $.I:\n    case $.S:\n    case $.B:\n    case $.U:\n    case $.EM:\n    case $.TT:\n    case $.BIG:\n    case $.CODE:\n    case $.FONT:\n    case $.SMALL:\n    case $.STRIKE:\n    case $.STRONG:\n      {\n        bStartTagInBody(p, token);\n        break;\n      }\n    case $.A:\n      {\n        aStartTagInBody(p, token);\n        break;\n      }\n    case $.H1:\n    case $.H2:\n    case $.H3:\n    case $.H4:\n    case $.H5:\n    case $.H6:\n      {\n        numberedHeaderStartTagInBody(p, token);\n        break;\n      }\n    case $.P:\n    case $.DL:\n    case $.OL:\n    case $.UL:\n    case $.DIV:\n    case $.DIR:\n    case $.NAV:\n    case $.MAIN:\n    case $.MENU:\n    case $.ASIDE:\n    case $.CENTER:\n    case $.FIGURE:\n    case $.FOOTER:\n    case $.HEADER:\n    case $.HGROUP:\n    case $.DIALOG:\n    case $.DETAILS:\n    case $.ADDRESS:\n    case $.ARTICLE:\n    case $.SECTION:\n    case $.SUMMARY:\n    case $.FIELDSET:\n    case $.BLOCKQUOTE:\n    case $.FIGCAPTION:\n      {\n        addressStartTagInBody(p, token);\n        break;\n      }\n    case $.LI:\n    case $.DD:\n    case $.DT:\n      {\n        listItemStartTagInBody(p, token);\n        break;\n      }\n    case $.BR:\n    case $.IMG:\n    case $.WBR:\n    case $.AREA:\n    case $.EMBED:\n    case $.KEYGEN:\n      {\n        areaStartTagInBody(p, token);\n        break;\n      }\n    case $.HR:\n      {\n        hrStartTagInBody(p, token);\n        break;\n      }\n    case $.RB:\n    case $.RTC:\n      {\n        rbStartTagInBody(p, token);\n        break;\n      }\n    case $.RT:\n    case $.RP:\n      {\n        rtStartTagInBody(p, token);\n        break;\n      }\n    case $.PRE:\n    case $.LISTING:\n      {\n        preStartTagInBody(p, token);\n        break;\n      }\n    case $.XMP:\n      {\n        xmpStartTagInBody(p, token);\n        break;\n      }\n    case $.SVG:\n      {\n        svgStartTagInBody(p, token);\n        break;\n      }\n    case $.HTML:\n      {\n        htmlStartTagInBody(p, token);\n        break;\n      }\n    case $.BASE:\n    case $.LINK:\n    case $.META:\n    case $.STYLE:\n    case $.TITLE:\n    case $.SCRIPT:\n    case $.BGSOUND:\n    case $.BASEFONT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.BODY:\n      {\n        bodyStartTagInBody(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formStartTagInBody(p, token);\n        break;\n      }\n    case $.NOBR:\n      {\n        nobrStartTagInBody(p, token);\n        break;\n      }\n    case $.MATH:\n      {\n        mathStartTagInBody(p, token);\n        break;\n      }\n    case $.TABLE:\n      {\n        tableStartTagInBody(p, token);\n        break;\n      }\n    case $.INPUT:\n      {\n        inputStartTagInBody(p, token);\n        break;\n      }\n    case $.PARAM:\n    case $.TRACK:\n    case $.SOURCE:\n      {\n        paramStartTagInBody(p, token);\n        break;\n      }\n    case $.IMAGE:\n      {\n        imageStartTagInBody(p, token);\n        break;\n      }\n    case $.BUTTON:\n      {\n        buttonStartTagInBody(p, token);\n        break;\n      }\n    case $.APPLET:\n    case $.OBJECT:\n    case $.MARQUEE:\n      {\n        appletStartTagInBody(p, token);\n        break;\n      }\n    case $.IFRAME:\n      {\n        iframeStartTagInBody(p, token);\n        break;\n      }\n    case $.SELECT:\n      {\n        selectStartTagInBody(p, token);\n        break;\n      }\n    case $.OPTION:\n    case $.OPTGROUP:\n      {\n        optgroupStartTagInBody(p, token);\n        break;\n      }\n    case $.NOEMBED:\n      {\n        noembedStartTagInBody(p, token);\n        break;\n      }\n    case $.FRAMESET:\n      {\n        framesetStartTagInBody(p, token);\n        break;\n      }\n    case $.TEXTAREA:\n      {\n        textareaStartTagInBody(p, token);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          noembedStartTagInBody(p, token);\n        } else {\n          genericStartTagInBody(p, token);\n        }\n        break;\n      }\n    case $.PLAINTEXT:\n      {\n        plaintextStartTagInBody(p, token);\n        break;\n      }\n    case $.COL:\n    case $.TH:\n    case $.TD:\n    case $.TR:\n    case $.HEAD:\n    case $.FRAME:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.CAPTION:\n    case $.COLGROUP:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        genericStartTagInBody(p, token);\n      }\n  }\n}\nfunction bodyEndTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    //NOTE: <body> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo) {\n      var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n      if (bodyElement) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  }\n}\nfunction htmlEndTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    endTagAfterBody(p, token);\n  }\n}\nfunction addressEndTagInBody(p, token) {\n  var tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction formEndTagInBody(p) {\n  var inTemplate = p.openElements.tmplCount > 0;\n  var formElement = p.formElement;\n  if (!inTemplate) {\n    p.formElement = null;\n  }\n  if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n    p.openElements.generateImpliedEndTags();\n    if (inTemplate) {\n      p.openElements.popUntilTagNamePopped($.FORM);\n    } else if (formElement) {\n      p.openElements.remove(formElement);\n    }\n  }\n}\nfunction pEndTagInBody(p) {\n  if (!p.openElements.hasInButtonScope($.P)) {\n    p._insertFakeElement(TN.P, $.P);\n  }\n  p._closePElement();\n}\nfunction liEndTagInBody(p) {\n  if (p.openElements.hasInListItemScope($.LI)) {\n    p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n    p.openElements.popUntilTagNamePopped($.LI);\n  }\n}\nfunction ddEndTagInBody(p, token) {\n  var tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTagsWithExclusion(tn);\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction numberedHeaderEndTagInBody(p) {\n  if (p.openElements.hasNumberedHeaderInScope()) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilNumberedHeaderPopped();\n  }\n}\nfunction appletEndTagInBody(p, token) {\n  var tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n    p.activeFormattingElements.clearToLastMarker();\n  }\n}\nfunction brEndTagInBody(p) {\n  p._reconstructActiveFormattingElements();\n  p._insertFakeElement(TN.BR, $.BR);\n  p.openElements.pop();\n  p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n  var tn = token.tagName;\n  var tid = token.tagID;\n  for (var i = p.openElements.stackTop; i > 0; i--) {\n    var element = p.openElements.items[i];\n    var elementId = p.openElements.tagIDs[i];\n    // Compare the tag name here, as the tag might not be a known tag with an ID.\n    if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(tid);\n      if (p.openElements.stackTop >= i) p.openElements.shortenToLength(i);\n      break;\n    }\n    if (p._isSpecialElement(element, elementId)) {\n      break;\n    }\n  }\n}\nfunction endTagInBody(p, token) {\n  switch (token.tagID) {\n    case $.A:\n    case $.B:\n    case $.I:\n    case $.S:\n    case $.U:\n    case $.EM:\n    case $.TT:\n    case $.BIG:\n    case $.CODE:\n    case $.FONT:\n    case $.NOBR:\n    case $.SMALL:\n    case $.STRIKE:\n    case $.STRONG:\n      {\n        callAdoptionAgency(p, token);\n        break;\n      }\n    case $.P:\n      {\n        pEndTagInBody(p);\n        break;\n      }\n    case $.DL:\n    case $.UL:\n    case $.OL:\n    case $.DIR:\n    case $.DIV:\n    case $.NAV:\n    case $.PRE:\n    case $.MAIN:\n    case $.MENU:\n    case $.ASIDE:\n    case $.BUTTON:\n    case $.CENTER:\n    case $.FIGURE:\n    case $.FOOTER:\n    case $.HEADER:\n    case $.HGROUP:\n    case $.DIALOG:\n    case $.ADDRESS:\n    case $.ARTICLE:\n    case $.DETAILS:\n    case $.SECTION:\n    case $.SUMMARY:\n    case $.LISTING:\n    case $.FIELDSET:\n    case $.BLOCKQUOTE:\n    case $.FIGCAPTION:\n      {\n        addressEndTagInBody(p, token);\n        break;\n      }\n    case $.LI:\n      {\n        liEndTagInBody(p);\n        break;\n      }\n    case $.DD:\n    case $.DT:\n      {\n        ddEndTagInBody(p, token);\n        break;\n      }\n    case $.H1:\n    case $.H2:\n    case $.H3:\n    case $.H4:\n    case $.H5:\n    case $.H6:\n      {\n        numberedHeaderEndTagInBody(p);\n        break;\n      }\n    case $.BR:\n      {\n        brEndTagInBody(p);\n        break;\n      }\n    case $.BODY:\n      {\n        bodyEndTagInBody(p, token);\n        break;\n      }\n    case $.HTML:\n      {\n        htmlEndTagInBody(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formEndTagInBody(p);\n        break;\n      }\n    case $.APPLET:\n    case $.OBJECT:\n    case $.MARQUEE:\n      {\n        appletEndTagInBody(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        genericEndTagInBody(p, token);\n      }\n  }\n}\nfunction eofInBody(p, token) {\n  if (p.tmplInsertionModeStack.length > 0) {\n    eofInTemplate(p, token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n  var _a;\n  if (token.tagID === $.SCRIPT) {\n    (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n  }\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n  p._err(token, ERR.eofInElementThatCanContainOnlyText);\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n  p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n  if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n    p.pendingCharacterTokens.length = 0;\n    p.hasNonWhitespacePendingCharacterToken = false;\n    p.originalInsertionMode = p.insertionMode;\n    p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n    switch (token.type) {\n      case TokenType.CHARACTER:\n        {\n          characterInTableText(p, token);\n          break;\n        }\n      case TokenType.WHITESPACE_CHARACTER:\n        {\n          whitespaceCharacterInTableText(p, token);\n          break;\n        }\n      // Ignore null\n    }\n  } else {\n    tokenInTable(p, token);\n  }\n}\nfunction captionStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p.activeFormattingElements.insertMarker();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n  startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(TN.TBODY, $.TBODY);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n  startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n  if (p.openElements.hasInTableScope($.TABLE)) {\n    p.openElements.popUntilTagNamePopped($.TABLE);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  }\n}\nfunction inputStartTagInTable(p, token) {\n  if (isHiddenInput(token)) {\n    p._appendElement(token, NS.HTML);\n  } else {\n    tokenInTable(p, token);\n  }\n  token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n  if (!p.formElement && p.openElements.tmplCount === 0) {\n    p._insertElement(token, NS.HTML);\n    p.formElement = p.openElements.current;\n    p.openElements.pop();\n  }\n}\nfunction startTagInTable(p, token) {\n  switch (token.tagID) {\n    case $.TD:\n    case $.TH:\n    case $.TR:\n      {\n        tdStartTagInTable(p, token);\n        break;\n      }\n    case $.STYLE:\n    case $.SCRIPT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        colStartTagInTable(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formStartTagInTable(p, token);\n        break;\n      }\n    case $.TABLE:\n      {\n        tableStartTagInTable(p, token);\n        break;\n      }\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        tbodyStartTagInTable(p, token);\n        break;\n      }\n    case $.INPUT:\n      {\n        inputStartTagInTable(p, token);\n        break;\n      }\n    case $.CAPTION:\n      {\n        captionStartTagInTable(p, token);\n        break;\n      }\n    case $.COLGROUP:\n      {\n        colgroupStartTagInTable(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction endTagInTable(p, token) {\n  switch (token.tagID) {\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.TABLE)) {\n          p.openElements.popUntilTagNamePopped($.TABLE);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TBODY:\n    case $.TD:\n    case $.TFOOT:\n    case $.TH:\n    case $.THEAD:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction tokenInTable(p, token) {\n  var savedFosterParentingState = p.fosterParentingEnabled;\n  p.fosterParentingEnabled = true;\n  // Process token in `In Body` mode\n  modeInBody(p, token);\n  p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n  p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n  var i = 0;\n  if (p.hasNonWhitespacePendingCharacterToken) {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      tokenInTable(p, p.pendingCharacterTokens[i]);\n    }\n  } else {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      p._insertCharacters(p.pendingCharacterTokens[i]);\n    }\n  }\n  p.insertionMode = p.originalInsertionMode;\n  p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nvar TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n  var tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope($.CAPTION)) {\n      p.openElements.generateImpliedEndTags();\n      p.openElements.popUntilTagNamePopped($.CAPTION);\n      p.activeFormattingElements.clearToLastMarker();\n      p.insertionMode = InsertionMode.IN_TABLE;\n      startTagInTable(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCaption(p, token) {\n  var tn = token.tagID;\n  switch (tn) {\n    case $.CAPTION:\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped($.CAPTION);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          if (tn === $.TABLE) {\n            endTagInTable(p, token);\n          }\n        }\n        break;\n      }\n    case $.BODY:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TBODY:\n    case $.TD:\n    case $.TFOOT:\n    case $.TH:\n    case $.THEAD:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction endTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case $.COLGROUP:\n      {\n        if (p.openElements.currentTagId === $.COLGROUP) {\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction tokenInColumnGroup(p, token) {\n  if (p.openElements.currentTagId === $.COLGROUP) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_TABLE;\n    p._processToken(token);\n  }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n  switch (token.tagID) {\n    case $.TR:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_ROW;\n        break;\n      }\n    case $.TH:\n    case $.TD:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement(TN.TR, $.TR);\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          startTagInTable(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInTableBody(p, token) {\n  var tn = token.tagID;\n  switch (token.tagID) {\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case $.TABLE:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          endTagInTable(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TD:\n    case $.TH:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n  switch (token.tagID) {\n    case $.TH:\n    case $.TD:\n      {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_CELL;\n        p.activeFormattingElements.insertMarker();\n        break;\n      }\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          startTagInTableBody(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInRow(p, token) {\n  switch (token.tagID) {\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        }\n        break;\n      }\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TD:\n    case $.TH:\n      {\n        // Ignore end tag\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n  var tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n      p._closeTableCell();\n      startTagInRow(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCell(p, token) {\n  var tn = token.tagID;\n  switch (tn) {\n    case $.TD:\n    case $.TH:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped(tn);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_ROW;\n        }\n        break;\n      }\n    case $.TABLE:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p._closeTableCell();\n          endTagInRow(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.OPTION:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.OPTGROUP:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.INPUT:\n    case $.KEYGEN:\n    case $.TEXTAREA:\n    case $.SELECT:\n      {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n          p.openElements.popUntilTagNamePopped($.SELECT);\n          p._resetInsertionMode();\n          if (token.tagID !== $.SELECT) {\n            p._processStartTag(token);\n          }\n        }\n        break;\n      }\n    case $.SCRIPT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction endTagInSelect(p, token) {\n  switch (token.tagID) {\n    case $.OPTGROUP:\n      {\n        if (p.openElements.stackTop > 0 && p.openElements.currentTagId === $.OPTION && p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case $.OPTION:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case $.SELECT:\n      {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n          p.openElements.popUntilTagNamePopped($.SELECT);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n  var tn = token.tagID;\n  if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {\n    p.openElements.popUntilTagNamePopped($.SELECT);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  } else {\n    startTagInSelect(p, token);\n  }\n}\nfunction endTagInSelectInTable(p, token) {\n  var tn = token.tagID;\n  if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {\n    if (p.openElements.hasInTableScope(tn)) {\n      p.openElements.popUntilTagNamePopped($.SELECT);\n      p._resetInsertionMode();\n      p.onEndTag(token);\n    }\n  } else {\n    endTagInSelect(p, token);\n  }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n  switch (token.tagID) {\n    // First, handle tags that can start without a mode change\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.SCRIPT:\n    case $.STYLE:\n    case $.TEMPLATE:\n    case $.TITLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    // Re-process the token in the appropriate mode\n    case $.CAPTION:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n        p.insertionMode = InsertionMode.IN_TABLE;\n        startTagInTable(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n        p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n        startTagInColumnGroup(p, token);\n        break;\n      }\n    case $.TR:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n        p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        startTagInTableBody(p, token);\n        break;\n      }\n    case $.TD:\n    case $.TH:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    default:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n        p.insertionMode = InsertionMode.IN_BODY;\n        startTagInBody(p, token);\n      }\n  }\n}\nfunction endTagInTemplate(p, token) {\n  if (token.tagID === $.TEMPLATE) {\n    templateEndTagInHead(p, token);\n  }\n}\nfunction eofInTemplate(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.popUntilTagNamePopped($.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n    p.onEof(token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n  if (token.tagID === $.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction endTagAfterBody(p, token) {\n  var _a;\n  if (token.tagID === $.HTML) {\n    if (!p.fragmentContext) {\n      p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n    }\n    //NOTE: <html> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n      p._setEndLocation(p.openElements.items[0], token);\n      // Update the body element, if it doesn't have an end tag\n      var bodyElement = p.openElements.items[1];\n      if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction tokenAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.FRAMESET:\n      {\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.FRAME:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction endTagInFrameset(p, token) {\n  if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n    p.openElements.pop();\n    if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n      p.insertionMode = InsertionMode.AFTER_FRAMESET;\n    }\n  }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction endTagAfterFrameset(p, token) {\n  if (token.tagID === $.HTML) {\n    p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n  }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n  if (token.tagID === $.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterAfterBody(p, token);\n  }\n}\nfunction tokenAfterAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n  token.chars = unicode.REPLACEMENT_CHARACTER;\n  p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n  while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML && !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n    p.openElements.pop();\n  }\n}\nfunction startTagInForeignContent(p, token) {\n  if (foreignContent.causesExit(token)) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._startTagOutsideForeignContent(token);\n  } else {\n    var current = p._getAdjustedCurrentElement();\n    var currentNs = p.treeAdapter.getNamespaceURI(current);\n    if (currentNs === NS.MATHML) {\n      foreignContent.adjustTokenMathMLAttrs(token);\n    } else if (currentNs === NS.SVG) {\n      foreignContent.adjustTokenSVGTagName(token);\n      foreignContent.adjustTokenSVGAttrs(token);\n    }\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n      p._appendElement(token, currentNs);\n    } else {\n      p._insertElement(token, currentNs);\n    }\n    token.ackSelfClosing = true;\n  }\n}\nfunction endTagInForeignContent(p, token) {\n  if (token.tagID === $.P || token.tagID === $.BR) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._endTagOutsideForeignContent(token);\n    return;\n  }\n  for (var i = p.openElements.stackTop; i > 0; i--) {\n    var element = p.openElements.items[i];\n    if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n      p._endTagOutsideForeignContent(token);\n      break;\n    }\n    var tagName = p.treeAdapter.getTagName(element);\n    if (tagName.toLowerCase() === token.tagName) {\n      //NOTE: update the token tag name for `_setEndLocation`.\n      token.tagName = tagName;\n      p.openElements.shortenToLength(i);\n      break;\n    }\n  }\n}","map":{"version":3,"names":["Tokenizer","TokenizerMode","OpenElementStack","FormattingElementList","EntryType","defaultTreeAdapter","doctype","foreignContent","ERR","unicode","TAG_ID","$","TAG_NAMES","TN","NS","ATTRS","SPECIAL_ELEMENTS","DOCUMENT_MODE","isNumberedHeader","getTagID","TokenType","getTokenAttr","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","startLine","startCol","startOffset","endLine","endCol","endOffset","TABLE_STRUCTURE_TAGS","Set","TABLE","TBODY","TFOOT","THEAD","TR","defaultParserOptions","scriptingEnabled","sourceCodeLocationInfo","treeAdapter","onParseError","Parser","options","document","fragmentContext","arguments","length","undefined","scriptHandler","_classCallCheck","currentToken","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","skipNextNewLine","fosterParentingEnabled","_objectSpread","createDocument","tokenizer","activeFormattingElements","fragmentContextID","getTagName","UNKNOWN","_setContextModes","openElements","_createClass","key","value","getFragment","rootElement","getFirstChild","fragment","createDocumentFragment","_adoptNodes","_err","token","code","beforeToken","_a","loc","location","err","onItemPush","node","tid","isTop","_b","call","stackTop","onItemPop","_setEndLocation","current","currentTagId","_this$openElements","isHTML","getNamespaceURI","HTML","inForeignNode","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","state","TEXT","switchToPlaintextParsing","IN_BODY","PLAINTEXT","_getAdjustedCurrentElement","_findFormInFragmentContext","FORM","getParentNode","_initTokenizerForFragmentParsing","TITLE","TEXTAREA","RCDATA","STYLE","XMP","IFRAME","NOEMBED","NOFRAMES","NOSCRIPT","RAWTEXT","SCRIPT","SCRIPT_DATA","_setDocumentType","_this","name","publicId","systemId","setDocumentType","documentChildren","getChildNodes","docTypeNode","find","isDocumentTypeNode","setNodeSourceCodeLocation","_attachElementToTree","element","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","parent","currentTmplContentOrNode","appendChild","_appendElement","namespaceURI","createElement","tagName","attrs","push","tagID","_insertFakeElement","_insertTemplate","tmpl","content","setTemplateContent","_insertFakeRootElement","_appendCommentNode","commentNode","createCommentNode","data","_insertCharacters","beforeElement","_this$_findFosterPare","_findFosterParentingLocation","insertTextBefore","chars","insertText","siblings","textNodeIdx","lastIndexOf","textNode","tnLoc","getNodeSourceCodeLocation","_token$location","updateNodeSourceCodeLocation","donor","recipient","child","detachNode","closingToken","ctLoc","tn","endLoc","type","END_TAG","endTag","shouldProcessStartTagTokenInForeignContent","_this$openElements2","SVG","ANNOTATION_XML","MATHML","MGLYPH","MALIGNMARK","_processToken","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","COMMENT","onComment","DOCTYPE","onDoctype","START_TAG","_processStartTag","onEndTag","EOF","onEof","WHITESPACE_CHARACTER","onWhitespaceCharacter","foreignNS","ns","getAttrList","isIntegrationPoint","_reconstructActiveFormattingElements","_this2","listLength","entries","endIndex","findIndex","entry","Marker","contains","unopenIdx","i","_closeTableCell","generateImpliedEndTags","popUntilTableCellPopped","clearToLastMarker","IN_ROW","_closePElement","generateImpliedEndTagsWithExclusion","P","popUntilTagNamePopped","_resetInsertionMode","tagIDs","IN_TABLE_BODY","CAPTION","IN_CAPTION","COLGROUP","IN_COLUMN_GROUP","IN_TABLE","BODY","FRAMESET","IN_FRAMESET","SELECT","_resetInsertionModeForSelect","TEMPLATE","AFTER_HEAD","BEFORE_HEAD","TD","TH","IN_CELL","HEAD","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","has","openElement","items","getTemplateContent","insertBefore","_isSpecialElement","id","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","IN_TEMPLATE","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","doctypeInInitialMode","misplacedDoctype","onStartTag","selfClosing","ackSelfClosing","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagInForeignContent","_startTagOutsideForeignContent","startTagBeforeHtml","startTagBeforeHead","startTagInHead","startTagInHeadNoScript","startTagAfterHead","startTagInBody","startTagInTable","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","endTagInForeignContent","_endTagOutsideForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInText","eofInTemplate","stopParsing","charCodeAt","CODE_POINTS","LINE_FEED","substr","whitespaceCharacterInBody","whitespaceCharacterInTableText","parse","html","parser","write","getFragmentParser","opts","documentMock","unshift","aaObtainFormattingElementEntry","p","formattingElementEntry","getElementEntryInScopeWithTagName","removeEntry","hasInScope","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","idx","shortenToLength","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","shouldRemoveFromOpenElements","remove","aaRecreateElementFromEntry","bookmark","newElement","replace","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","insertElementAfterBookmark","insertAfter","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","mode","forceQuirks","QUIRKS","getDocumentMode","isConforming","nonConformingDoctype","setDocumentMode","missingDoctype","BR","endTagWithoutMatchingOpenElement","BASE","BASEFONT","BGSOUND","LINK","META","insertMarker","misplacedStartTagForHeadElement","pop","templateEndTagInHead","tmplCount","generateImpliedEndTagsThoroughly","closingOfElementWithOpenChildElements","shift","nestedNoscriptInHead","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","abandonedHeadElementChild","modeInBody","htmlStartTagInBody","adoptAttributes","bodyStartTagInBody","tryPeekProperlyNestedBodyElement","framesetStartTagInBody","popAllUpToHtmlElement","addressStartTagInBody","hasInButtonScope","numberedHeaderStartTagInBody","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementId","LI","DD","DT","ADDRESS","DIV","plaintextStartTagInBody","buttonStartTagInBody","BUTTON","aStartTagInBody","activeElementEntry","A","pushElement","bStartTagInBody","nobrStartTagInBody","NOBR","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","toLowerCase","inputStartTagInBody","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","IMG","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","noembedStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","OPTION","rbStartTagInBody","RUBY","rtStartTagInBody","RTC","mathStartTagInBody","adjustTokenMathMLAttrs","adjustTokenXMLAttrs","svgStartTagInBody","adjustTokenSVGAttrs","genericStartTagInBody","I","S","B","U","EM","TT","BIG","CODE","FONT","SMALL","STRIKE","STRONG","H1","H2","H3","H4","H5","H6","DL","OL","UL","DIR","NAV","MAIN","MENU","ASIDE","CENTER","FIGURE","FOOTER","HEADER","HGROUP","DIALOG","DETAILS","ARTICLE","SECTION","SUMMARY","FIELDSET","BLOCKQUOTE","FIGCAPTION","WBR","AREA","EMBED","KEYGEN","HR","RB","RT","RP","PRE","LISTING","MATH","INPUT","PARAM","TRACK","SOURCE","IMAGE","APPLET","OBJECT","MARQUEE","OPTGROUP","COL","FRAME","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","pEndTagInBody","liEndTagInBody","hasInListItemScope","ddEndTagInBody","numberedHeaderEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","appletEndTagInBody","brEndTagInBody","eofInElementThatCanContainOnlyText","tokenInTable","captionStartTagInTable","clearBackToTableContext","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","hasInTableScope","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","TABLE_VOID_ELEMENTS","clearBackToTableBodyContext","hasTableBodyContextInTableScope","clearBackToTableRowContext","hasInSelectScope","isRootHtmlElementCurrent","REPLACEMENT_CHARACTER","popUntilHtmlOrIntegrationPoint","causesExit","currentNs","adjustTokenSVGTagName"],"sources":["/Users/Pallavi/metaphor/news-summarizer/node_modules/cheerio/node_modules/parse5/dist/parser/index.js"],"sourcesContent":["import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}